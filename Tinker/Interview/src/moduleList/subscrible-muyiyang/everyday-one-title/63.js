let everydayOneTitle63 = "63: 如何设计实现无缝轮播";

{
    /****
     * 第 63 题：如何设计实现无缝轮播
     *      思路: 
     *          1. 给个 banner的作为轮播图的容器，固定宽度，为每张图片宽度;
     *          2. 预设好图片个数如（0.png - 4.png），则图片列表宽度则为每张图片*图片个数, 且图片列表还需设置负的偏移量（-banner的width）;
     *          3. 并在预设好图片的 最前张图(0.png)插入张图片(4.png), 在最后张图(4.png)插入张图片(0.png)
     *左偏移>    4. 这样处理好后,当设置left在最后一张图时width此时应该是图片列表的总宽度了，
     *              接着设置left偏移时，会超出限制，显示没关系，因为最后位置补充了第一张图，
     *              补充的这张为过渡图。同时还需要设置left偏移为 负的图片宽度（-banner的width）;，这样就能偏移到最初样式
     * 
     *左偏移<    5.还有种相反情况，
     *              用的是第一张过渡的图片,
     *              left的偏移量会先使用过渡的图片,此时left偏移量应该为0了,不过在这个条件下就需要判断处理
     *              在设置left的真正位置为最后一张图片，此时就直接设置为图片列表总宽度即可(出去两张过渡图片)
     * 
     * 
     * 
     * 注意点：
     * 
     *      1. 无缝衔接
     *      2. 预防鬼畜： 
     *              始终保证轮播图的运动动画只有一个，需要在每次动画开始之前，尝试停止动画定时器，然后开始为新的动画添加定时器。
     *              每次执行运动函数之前，先尝试清除一下，上一个轮播图的定时器。确保同时触发运动函数时，只有一个定时器在工作。
     *      3. 预防暴力点击：
     *              如果用户快速点击触发事件，会在短时间内多次调用切换函数； 本质同注意点2    
     */
    
}

export { everydayOneTitle63 }